{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Louis\\\\Desktop\\\\Sorting Algorithms\\\\sorting-alg-visual\\\\src\\\\visualizer.js\";\nimport React from 'react';\nimport './App.css';\nimport Bar from './bar';\nconst listSize = 50;\n\nclass Visualizer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      array: Array.from(Array(listSize).keys())\n    };\n    const {\n      array\n    } = this.state;\n    this.totalWidth = 70;\n    this.totalHeight = 60;\n    this.barWidth = this.totalWidth / array.length;\n    this.barHeight = this.totalHeight / array.length;\n    this.delayTime = 10;\n  }\n\n  bubbleSort(arr) {\n    let tempArr = JSON.parse(JSON.stringify(arr));\n    let states = [];\n    let delays = [];\n    let iter = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        iter += 1;\n\n        if (tempArr[j] > tempArr[j + 1]) {\n          let temp = tempArr[j];\n          tempArr[j] = tempArr[j + 1];\n          tempArr[j + 1] = temp;\n          states.push(JSON.parse(JSON.stringify(tempArr)));\n          delays.push(iter);\n        }\n      }\n    }\n\n    for (let i = 0; i < states.length; i++) {\n      setTimeout(() => {\n        this.setState({\n          array: states[i]\n        });\n      }, delays[i] * this.delayTime);\n    }\n  }\n\n  insertionSort(arr) {\n    let tempArr = JSON.parse(JSON.stringify(arr));\n    let states = [];\n    let delays = [];\n    let iter = 0;\n\n    for (let i = 1; i < arr.length; i++) {\n      for (let j = i; j >= 0; j--) {\n        iter += 1;\n\n        if (tempArr[j] < tempArr[j - 1]) {\n          let temp = tempArr[j];\n          tempArr[j] = tempArr[j - 1];\n          tempArr[j - 1] = temp;\n          states.push(JSON.parse(JSON.stringify(tempArr)));\n          delays.push(iter);\n        } else {\n          break;\n        }\n      }\n    }\n\n    for (let i = 0; i < states.length; i++) {\n      console.log(states[i]);\n      setTimeout(() => {\n        this.setState({\n          array: states[i]\n        });\n      }, delays[i] * this.delayTime);\n    }\n  }\n\n  quickSort(arr) {\n    let tempArr = JSON.parse(JSON.stringify(arr));\n    let states = [];\n    let delays = [];\n\n    for (let i = 0; i < states.length; i++) {\n      console.log(states[i]);\n      setTimeout(() => {\n        this.setState({\n          array: states[i]\n        });\n      }, delays[i] * this.delayTime);\n    }\n  }\n\n  shuffle(arr) {\n    for (var i = arr.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n\n    this.setState({\n      array: arr\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"visualizer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, array.map(bar => /*#__PURE__*/React.createElement(Bar, {\n      key: bar,\n      width: this.barWidth - 0.5,\n      height: this.barHeight * (bar + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        this.shuffle(array);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Shuffle Array\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        this.bubbleSort(array);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"BubbleSort\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        this.insertionSort(array);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Insertion Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        alert('Need to finish this');\n        this.quickSort(array, 0, array.length - 1, 1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Quick Sort\")));\n  }\n\n}\n\nexport default Visualizer;","map":{"version":3,"sources":["C:/Users/Louis/Desktop/Sorting Algorithms/sorting-alg-visual/src/visualizer.js"],"names":["React","Bar","listSize","Visualizer","Component","constructor","state","array","Array","from","keys","totalWidth","totalHeight","barWidth","length","barHeight","delayTime","bubbleSort","arr","tempArr","JSON","parse","stringify","states","delays","iter","i","j","temp","push","setTimeout","setState","insertionSort","console","log","quickSort","shuffle","Math","floor","random","render","map","bar","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Bar from './bar';\r\n\r\nconst listSize = 50;\r\n\r\nclass Visualizer extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            array: Array.from(Array(listSize).keys())\r\n        }\r\n        const {array} = this.state; \r\n        this.totalWidth = 70;\r\n        this.totalHeight = 60;\r\n        this.barWidth = this.totalWidth/array.length;\r\n        this.barHeight = this.totalHeight/array.length;\r\n        this.delayTime = 10;\r\n    }\r\n\r\n    bubbleSort(arr){\r\n        let tempArr = JSON.parse(JSON.stringify(arr));\r\n        let states = [];\r\n        let delays = [];\r\n        let iter = 0;\r\n        for(let i = 0; i<arr.length; i++){\r\n            for(let j = 0; j<arr.length-i-1; j++){\r\n                iter+=1;\r\n                if(tempArr[j]>tempArr[j+1]){\r\n                    let temp = tempArr[j];\r\n                    tempArr[j] = tempArr[j+1];\r\n                    tempArr[j+1] = temp;\r\n                    states.push(JSON.parse(JSON.stringify(tempArr)));\r\n                    delays.push(iter);\r\n                }\r\n\r\n            }\r\n        }\r\n        for(let i=0; i<states.length; i++){\r\n            setTimeout(()=>{this.setState(\r\n                    { array: states[i] }\r\n                )}, delays[i]*this.delayTime);\r\n        }\r\n    }\r\n    \r\n    insertionSort(arr){\r\n        let tempArr = JSON.parse(JSON.stringify(arr));\r\n        let states = [];\r\n        let delays = [];\r\n        let iter = 0;\r\n        for(let i = 1; i<arr.length; i++){\r\n            for(let j = i; j>=0; j--){\r\n                iter+=1;\r\n                if(tempArr[j]<tempArr[j-1]){\r\n                    let temp = tempArr[j];\r\n                    tempArr[j] = tempArr[j-1];\r\n                    tempArr[j-1] = temp;\r\n                    states.push(JSON.parse(JSON.stringify(tempArr)));\r\n                    delays.push(iter);\r\n                }\r\n                else{\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\n        for(let i=0; i<states.length; i++){\r\n            console.log(states[i]);\r\n            setTimeout(()=>{this.setState(\r\n                    { array: states[i] }\r\n                )}, delays[i]*this.delayTime);\r\n        }\r\n    }\r\n\r\n    quickSort(arr){\r\n        let tempArr = JSON.parse(JSON.stringify(arr));\r\n        let states = [];\r\n        let delays = [];\r\n \r\n\r\n        for(let i=0; i<states.length; i++){\r\n            console.log(states[i]);\r\n            setTimeout(()=>{this.setState(\r\n                    { array: states[i] }\r\n                )}, delays[i]*this.delayTime);\r\n        }\r\n    }\r\n\r\n    shuffle(arr) {\r\n        for (var i = arr.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = temp;\r\n        }\r\n        this.setState({array: arr});\r\n    }\r\n\r\n    render (){\r\n        const {array} = this.state;\r\n        return (<div className=\"visualizer-container\">\r\n            <div className=\"array-container\">\r\n                {array.map(bar => (\r\n                    <Bar key={bar} width={this.barWidth -0.5} height={this.barHeight * (bar+1)}/>\r\n                ))\r\n                }\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <button className=\"button\" onClick={()=> {this.shuffle(array);}}>Shuffle Array</button>\r\n                <button className=\"button\" onClick={()=> {this.bubbleSort(array);}}>BubbleSort</button>\r\n                <button className=\"button\" onClick={()=> {this.insertionSort(array)}}>Insertion Sort</button>\r\n                <button className=\"button\" onClick={()=> {alert('Need to finish this');this.quickSort(array,0, array.length-1, 1)}}>Quick Sort</button>\r\n            </div>\r\n      </div>);\r\n    };\r\n  }\r\n  \r\n  export default Visualizer;\r\n  "]},"metadata":{},"sourceType":"module"}