{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Louis\\\\Desktop\\\\Sorting Algorithms\\\\sorting-alg-visual\\\\src\\\\visualizer.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Bar from './bar';\n\nclass Visualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    [this.array, this.setArray] = useState(Array.from(Array(40).keys()));\n    this.totalWidth = 70;\n    this.totalHeight = 60;\n    this.barWidth = this.totalWidth / this.array.length;\n    this.barHeight = this.totalHeight / this.array.length;\n    this.tempArr = JSON.parse(JSON.stringify(this.array));\n  }\n\n  shuffle(arr) {\n    for (var i = arr.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n\n    this.setArray(arr);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"visualizer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, this.array.map(bar => /*#__PURE__*/React.createElement(Bar, {\n      key: bar,\n      width: this.barWidth - 0.5,\n      height: this.barHeight * (bar + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        this.shuffle(this.tempArr);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Shuffle Array\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        alert('Merge Sort');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Merge Sort\")));\n  }\n\n}\n\nexport default Visualizer;","map":{"version":3,"sources":["C:/Users/Louis/Desktop/Sorting Algorithms/sorting-alg-visual/src/visualizer.js"],"names":["React","useState","Bar","Visualizer","Component","constructor","props","array","setArray","Array","from","keys","totalWidth","totalHeight","barWidth","length","barHeight","tempArr","JSON","parse","stringify","shuffle","arr","i","j","Math","floor","random","temp","render","map","bar","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAOA,KAAP;AACA,KAAC,KAAKC,KAAN,EAAa,KAAKC,QAAlB,IAA8BP,QAAQ,CAACQ,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAAD,CAAtC;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,QAAL,GAAgB,KAAKF,UAAL,GAAgB,KAAKL,KAAL,CAAWQ,MAA3C;AACA,SAAKC,SAAL,GAAiB,KAAKH,WAAL,GAAiB,KAAKN,KAAL,CAAWQ,MAA7C;AACA,SAAKE,OAAL,GAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKb,KAApB,CAAX,CAAf;AACH;;AAIDc,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT,SAAK,IAAIC,CAAC,GAAGD,GAAG,CAACP,MAAJ,GAAa,CAA1B,EAA6BQ,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACrC,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,UAAIK,IAAI,GAAGN,GAAG,CAACC,CAAD,CAAd;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACE,CAAD,CAAZ;AACAF,MAAAA,GAAG,CAACE,CAAD,CAAH,GAASI,IAAT;AACH;;AACD,SAAKpB,QAAL,CAAcc,GAAd;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtB,KAAL,CAAWuB,GAAX,CAAeC,GAAG,iBACf,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,KAAK,EAAE,KAAKjB,QAAL,GAAe,GAArC;AAA0C,MAAA,MAAM,EAAE,KAAKE,SAAL,IAAkBe,GAAG,GAAC,CAAtB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADI,eAOJ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAK;AAAC,aAAKV,OAAL,CAAa,KAAKJ,OAAlB;AAA4B,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAK;AAACe,QAAAA,KAAK,CAAC,YAAD,CAAL;AAAoB,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAPI,CAAR;AAYH;;AApCoC;;AAuCvC,eAAe7B,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Bar from './bar';\r\n\r\nclass Visualizer extends React.Component {\r\n    constructor(props){\r\n        super (props);\r\n        [this.array, this.setArray] = useState(Array.from(Array(40).keys()));\r\n        this.totalWidth = 70;\r\n        this.totalHeight = 60;\r\n        this.barWidth = this.totalWidth/this.array.length;\r\n        this.barHeight = this.totalHeight/this.array.length;\r\n        this.tempArr = JSON.parse(JSON.stringify(this.array));\r\n    }\r\n\r\n    \r\n\r\n    shuffle(arr) {\r\n        for (var i = arr.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = temp;\r\n        }\r\n        this.setArray(arr);\r\n    }\r\n\r\n    render (){\r\n        return (<div className=\"visualizer-container\">\r\n            <div className=\"array-container\">\r\n                {this.array.map(bar => (\r\n                    <Bar key={bar} width={this.barWidth -0.5} height={this.barHeight * (bar+1)}/>\r\n                ))\r\n                }\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <button className=\"button\" onClick={()=> {this.shuffle(this.tempArr);}}>Shuffle Array</button>\r\n                <button className=\"button\" onClick={()=> {alert('Merge Sort')}}>Merge Sort</button>\r\n            </div>\r\n      </div>);\r\n    };\r\n  }\r\n  \r\n  export default Visualizer;\r\n  "]},"metadata":{},"sourceType":"module"}