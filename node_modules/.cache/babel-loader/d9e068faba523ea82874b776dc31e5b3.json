{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Louis\\\\Desktop\\\\Sorting Algorithms\\\\sorting-alg-visual\\\\src\\\\visualizer.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Bar from './bar';\nimport buttonContainer from './button-container';\n\nfunction Visualizer() {\n  const [array, setArray] = useState(Array.from(Array(40).keys()));\n  let totalWidth = 70;\n  let totalHeight = 60;\n  let barWidth = totalWidth / array.length;\n  let barHeight = totalHeight / array.length;\n  let tempArr = JSON.parse(JSON.stringify(array));\n\n  function shuffle(arr) {\n    for (var i = arr.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n\n    setArray(arr);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualizer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, array.map(bar => /*#__PURE__*/React.createElement(Bar, {\n    key: bar,\n    width: barWidth - 0.5,\n    height: barHeight * (bar + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: props.functions[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Shuffle Array\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: props.functions[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Merge Sort\"))));\n}\n\nexport default Visualizer;","map":{"version":3,"sources":["C:/Users/Louis/Desktop/Sorting Algorithms/sorting-alg-visual/src/visualizer.js"],"names":["React","useState","Bar","buttonContainer","Visualizer","array","setArray","Array","from","keys","totalWidth","totalHeight","barWidth","length","barHeight","tempArr","JSON","parse","stringify","shuffle","arr","i","j","Math","floor","random","temp","map","bar","props","functions"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,SAASC,UAAT,GAAsB;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAAD,CAAlC;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,QAAQ,GAAGF,UAAU,GAACL,KAAK,CAACQ,MAAhC;AACA,MAAIC,SAAS,GAAGH,WAAW,GAACN,KAAK,CAACQ,MAAlC;AACA,MAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,KAAf,CAAX,CAAd;;AAEA,WAASc,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAK,IAAIC,CAAC,GAAGD,GAAG,CAACP,MAAJ,GAAa,CAA1B,EAA6BQ,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACrC,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,UAAIK,IAAI,GAAGN,GAAG,CAACC,CAAD,CAAd;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACE,CAAD,CAAZ;AACAF,MAAAA,GAAG,CAACE,CAAD,CAAH,GAASI,IAAT;AACH;;AACDpB,IAAAA,QAAQ,CAACc,GAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,KAAK,CAACsB,GAAN,CAAUC,GAAG,iBACX,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,KAAK,EAAEhB,QAAQ,GAAE,GAAhC;AAAqC,IAAA,MAAM,EAAEE,SAAS,IAAIc,GAAG,GAAC,CAAR,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADN,eAKI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEC,KAAK,CAACC,SAAN,CAAgB,CAAhB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAEA;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAED,KAAK,CAACC,SAAN,CAAgB,CAAhB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CALJ,CADJ,CADJ;AAeD;;AAED,eAAe1B,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Bar from './bar';\r\nimport buttonContainer from './button-container';\r\n\r\nfunction Visualizer() {\r\n\r\n    const [array, setArray] = useState(Array.from(Array(40).keys()));\r\n    let totalWidth = 70;\r\n    let totalHeight = 60;\r\n    let barWidth = totalWidth/array.length;\r\n    let barHeight = totalHeight/array.length;\r\n    let tempArr = JSON.parse(JSON.stringify(array));\r\n\r\n    function shuffle(arr) {\r\n        for (var i = arr.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = temp;\r\n        }\r\n        setArray(arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"visualizer-container\">\r\n            <div className=\"array-container\">\r\n                { array.map(bar => (\r\n                    <Bar key={bar} width={barWidth -0.5} height={barHeight * (bar+1)}/>\r\n                ))\r\n                }\r\n                <div className=\"button-container\">\r\n                <button className=\"button\" onClick={props.functions[0]}>Shuffle Array</button>\r\n                <button className=\"button\" onClick={props.functions[1]}>Merge Sort</button>\r\n        </div>\r\n            </div>\r\n            \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Visualizer;\r\n  "]},"metadata":{},"sourceType":"module"}